{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/ws/lib/constants.js","webpack:///./node_modules/ws/lib/permessage-deflate.js","webpack:///./node_modules/ws/lib/buffer-util.js","webpack:///external \"http\"","webpack:///external \"crypto\"","webpack:///./node_modules/ws/lib/websocket.js","webpack:///external \"events\"","webpack:///./node_modules/ws/lib/receiver.js","webpack:///external \"stream\"","webpack:///./node_modules/ws/lib/validation.js","webpack:///./node_modules/ws/lib/sender.js","webpack:///./node_modules/ws/lib/extension.js","webpack:///./src/server.ts","webpack:///./node_modules/ws/index.js","webpack:///external \"https\"","webpack:///external \"net\"","webpack:///external \"tls\"","webpack:///external \"url\"","webpack:///external \"zlib\"","webpack:///./node_modules/ws/lib/limiter.js","webpack:///./node_modules/ws/lib/event-target.js","webpack:///./node_modules/ws/lib/stream.js","webpack:///./node_modules/ws/lib/websocket-server.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","BINARY_TYPES","GUID","kStatusCode","kWebSocket","EMPTY_BUFFER","Buffer","alloc","NOOP","zlib","bufferUtil","Limiter","TRAILER","from","kPerMessageDeflate","kTotalLength","kCallback","kBuffers","kError","zlibLimiter","deflateOnData","chunk","this","push","length","inflateOnData","_maxPayload","RangeError","removeListener","reset","inflateOnError","err","_inflate","options","isServer","maxPayload","_options","_threshold","undefined","threshold","_isServer","_deflate","params","concurrency","concurrencyLimit","serverNoContextTakeover","server_no_context_takeover","clientNoContextTakeover","client_no_context_takeover","serverMaxWindowBits","server_max_window_bits","clientMaxWindowBits","client_max_window_bits","configurations","normalizeParams","acceptAsServer","acceptAsClient","close","callback","Error","offers","opts","accepted","find","response","forEach","keys","num","Number","isInteger","TypeError","data","fin","add","done","_decompress","result","_compress","endpoint","windowBits","Z_DEFAULT_WINDOWBITS","createInflateRaw","zlibInflateOptions","on","write","flush","concat","createDeflateRaw","zlibDeflateOptions","Z_SYNC_FLUSH","slice","list","totalLength","target","allocUnsafe","offset","buf","set","_mask","source","mask","output","_unmask","buffer","toArrayBuffer","byteLength","byteOffset","toBuffer","readOnly","isBuffer","ArrayBuffer","isView","bu","BufferUtil","unmask","e","require","EventEmitter","https","http","net","tls","randomBytes","createHash","URL","PerMessageDeflate","Receiver","Sender","addEventListener","removeEventListener","format","parse","readyStates","protocolVersions","WebSocket","address","protocols","super","readyState","CONNECTING","protocol","_binaryType","_closeFrameReceived","_closeFrameSent","_closeMessage","_closeTimer","_closeCode","_extensions","_receiver","_sender","_socket","_bufferedAmount","_redirects","Array","isArray","join","initAsClient","websocket","protocolVersion","perMessageDeflate","followRedirects","maxRedirects","createConnection","socketPath","hostname","timeout","method","host","path","port","includes","parsedUrl","url","href","isUnixSocket","pathname","isSecure","defaultPort","toString","tlsConnect","netConnect","startsWith","headers","Connection","Upgrade","search","handshakeTimeout","extensionName","offer","origin","Origin","username","password","auth","parts","split","req","_req","abortHandshake","aborted","CLOSING","emit","emitClose","res","location","statusCode","abort","addr","socket","head","digest","update","serverProt","protList","protError","extensions","accept","setSocket","CLOSED","OPEN","type","bufferSize","_bufferedBytes","receiver","receiverOnConclude","receiverOnDrain","receiverOnError","receiverOnMessage","receiverOnPing","receiverOnPong","setTimeout","setNoDelay","unshift","socketOnClose","socketOnData","socketOnEnd","socketOnError","cleanup","removeAllListeners","code","msg","end","destroy","cb","ping","sendAfterClose","pong","binary","compress","send","connect","servername","stream","message","captureStackTrace","setHeader","once","reason","resume","receiverOnFinish","read","clearTimeout","_writableState","finished","errorEmitted","pause","listeners","_listener","listener","Writable","isValidStatusCode","isValidUTF8","error","ErrorCtor","prefix","binaryType","_buffers","_compressed","_payloadLength","_fragmented","_masked","_fin","_opcode","_totalPayloadLength","_messageLength","_fragments","_state","_loop","encoding","startLoop","shift","dst","Uint8Array","getInfo","getPayloadLength16","getPayloadLength64","getMask","getData","consume","compressed","haveLength","readUInt16BE","readUInt32BE","Math","pow","controlMessage","decompress","dataMessage","er","messageLength","fragments","Validation","randomFillSync","applyMask","_firstFragment","_deflating","_queue","merge","payloadLength","opcode","rsv1","writeUInt16BE","writeUInt32BE","enqueue","doClose","sendFrame","frame","doPing","doPong","dispatch","_","destroyed","dequeue","Reflect","apply","cork","uncork","tokenChars","dest","elem","map","extension","k","values","v","header","paramName","mustUnescape","isEscaping","inQuotes","start","charCodeAt","SyntaxError","replace","token","server","createServer","Server","ws","console","log","listen","createWebSocketStream","kDone","kRun","pending","Infinity","jobs","job","Event","MessageEvent","CloseEvent","wasClean","OpenEvent","ErrorEvent","EventTarget","onMessage","onClose","onError","onOpen","Duplex","duplexOnEnd","duplexOnError","listenerCount","resumeOnReceiverDrain","duplex","autoDestroy","objectMode","writableObjectMode","_destroy","process","nextTick","called","terminate","_final","_readableState","endEmitted","_read","needDrain","_write","STATUS_CODES","keyRegex","writable","h","handleProtocols","clientTracking","verifyClient","noServer","backlog","_server","body","writeHead","_removeListeners","event","addListeners","listening","upgrade","handleUpgrade","clients","Set","client","index","indexOf","trim","version","toLowerCase","test","shouldHandle","info","secure","connection","authorized","encrypted","verified","completeUpgrade","readable","delete"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","'use strict';\n\nmodule.exports = {\n  BINARY_TYPES: ['nodebuffer', 'arraybuffer', 'fragments'],\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  EMPTY_BUFFER: Buffer.alloc(0),\n  NOOP: () => {}\n};\n","'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode, NOOP } = require('./constants');\n\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} options.serverNoContextTakeover Request/accept disabling\n   *     of server context takeover\n   * @param {Boolean} options.clientNoContextTakeover Advertise/acknowledge\n   *     disabling of client context takeover\n   * @param {(Boolean|Number)} options.serverMaxWindowBits Request/confirm the\n   *     use of a custom server window size\n   * @param {(Boolean|Number)} options.clientMaxWindowBits Advertise support\n   *     for, or request, a custom client window size\n   * @param {Object} options.zlibDeflateOptions Options to pass to zlib on deflate\n   * @param {Object} options.zlibInflateOptions Options to pass to zlib on inflate\n   * @param {Number} options.threshold Size (in bytes) below which messages\n   *     should not be compressed\n   * @param {Number} options.concurrencyLimit The number of concurrent calls to\n   *     zlib\n   * @param {Boolean} isServer Create the instance in either server or client\n   *     mode\n   * @param {Number} maxPayload The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      //\n      // An `'error'` event is emitted, only on Node.js < 10.0.0, if the\n      // `zlib.DeflateRaw` instance is closed while data is being processed.\n      // This can happen if `PerMessageDeflate#cleanup()` is called at the wrong\n      // time due to an abnormal WebSocket closure.\n      //\n      this._deflate.on('error', NOOP);\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) data = data.slice(0, data.length - 4);\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.close();\n        this._deflate = null;\n      } else {\n        this._deflate[kTotalLength] = 0;\n        this._deflate[kBuffers] = [];\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n","'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) return target.slice(0, offset);\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  // Required until https://github.com/nodejs/node/issues/9006 is resolved.\n  const length = buffer.length;\n  for (let i = 0; i < length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.byteLength === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = Buffer.from(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\ntry {\n  const bufferUtil = require('bufferutil');\n  const bu = bufferUtil.BufferUtil || bufferUtil;\n\n  module.exports = {\n    concat,\n    mask(source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bu.mask(source, mask, output, offset, length);\n    },\n    toArrayBuffer,\n    toBuffer,\n    unmask(buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bu.unmask(buffer, mask);\n    }\n  };\n} catch (e) /* istanbul ignore next */ {\n  module.exports = {\n    concat,\n    mask: _mask,\n    toArrayBuffer,\n    toBuffer,\n    unmask: _unmask\n  };\n}\n","module.exports = require(\"http\");","module.exports = require(\"crypto\");","'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst { addEventListener, removeEventListener } = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst protocolVersions = [8, 13];\nconst closeTimeout = 30 * 1000;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|url.URL)} address The URL to which to connect\n   * @param {(String|String[])} protocols The subprotocols\n   * @param {Object} options Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this.readyState = WebSocket.CONNECTING;\n    this.protocol = '';\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = '';\n    this._closeTimer = null;\n    this._closeCode = 1006;\n    this._extensions = {};\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (Array.isArray(protocols)) {\n        protocols = protocols.join(', ');\n      } else if (typeof protocols === 'object' && protocols !== null) {\n        options = protocols;\n        protocols = undefined;\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._isServer = true;\n    }\n  }\n\n  get CONNECTING() {\n    return WebSocket.CONNECTING;\n  }\n  get CLOSING() {\n    return WebSocket.CLOSING;\n  }\n  get CLOSED() {\n    return WebSocket.CLOSED;\n  }\n  get OPEN() {\n    return WebSocket.OPEN;\n  }\n\n  /**\n   * This deviates from the WHATWG interface since ws doesn't support the\n   * required default \"blob\" type (instead we define a custom \"nodebuffer\"\n   * type).\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    //\n    // `socket.bufferSize` is `undefined` if the socket is closed.\n    //\n    return (this._socket.bufferSize || 0) + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {net.Socket} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Number} maxPayload The maximum allowed message size\n   * @private\n   */\n  setSocket(socket, head, maxPayload) {\n    const receiver = new Receiver(\n      this._binaryType,\n      this._extensions,\n      this._isServer,\n      maxPayload\n    );\n\n    this._sender = new Sender(socket, this._extensions);\n    this._receiver = receiver;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    socket.setTimeout(0);\n    socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this.readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this.readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this.readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} code Status code explaining why the connection is closing\n   * @param {String} data A string explaining why the connection is closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (this._closeFrameSent && this._closeFrameReceived) this._socket.end();\n      return;\n    }\n\n    this.readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n      if (this._closeFrameReceived) this._socket.end();\n    });\n\n    //\n    // Specify a timeout for the closing handshake to complete.\n    //\n    this._closeTimer = setTimeout(\n      this._socket.destroy.bind(this._socket),\n      closeTimeout\n    );\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} data The data to send\n   * @param {Boolean} mask Indicates whether or not to mask `data`\n   * @param {Function} cb Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} data The data to send\n   * @param {Boolean} mask Indicates whether or not to mask `data`\n   * @param {Function} cb Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} options.compress Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} options.binary Specifies whether `data` is binary or text\n   * @param {Boolean} options.fin Specifies whether the fragment is the last one\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this._socket) {\n      this.readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\nreadyStates.forEach((readyState, i) => {\n  WebSocket[readyState] = i;\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    /**\n     * Return the listener of the event.\n     *\n     * @return {(Function|undefined)} The event listener or `undefined`\n     * @public\n     */\n    get() {\n      const listeners = this.listeners(method);\n      for (let i = 0; i < listeners.length; i++) {\n        if (listeners[i]._listener) return listeners[i]._listener;\n      }\n\n      return undefined;\n    },\n    /**\n     * Add a listener for the event.\n     *\n     * @param {Function} listener The listener to add\n     * @public\n     */\n    set(listener) {\n      const listeners = this.listeners(method);\n      for (let i = 0; i < listeners.length; i++) {\n        //\n        // Remove only the listeners added via `addEventListener`.\n        //\n        if (listeners[i]._listener) this.removeListener(method, listeners[i]);\n      }\n      this.addEventListener(method, listener);\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|url.URL)} address The URL to which to connect\n * @param {String} protocols The subprotocols\n * @param {Object} options Connection options\n * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable\n *     permessage-deflate\n * @param {Number} options.handshakeTimeout Timeout in milliseconds for the\n *     handshake request\n * @param {Number} options.protocolVersion Value of the `Sec-WebSocket-Version`\n *     header\n * @param {String} options.origin Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {Number} options.maxPayload The maximum allowed message size\n * @param {Boolean} options.followRedirects Whether or not to follow redirects\n * @param {Number} options.maxRedirects The maximum number of redirects allowed\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    createConnection: undefined,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: undefined,\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n    websocket.url = address.href;\n  } else {\n    parsedUrl = new URL(address);\n    websocket.url = address;\n  }\n\n  const isUnixSocket = parsedUrl.protocol === 'ws+unix:';\n\n  if (!parsedUrl.host && (!isUnixSocket || !parsedUrl.pathname)) {\n    throw new Error(`Invalid URL: ${websocket.url}`);\n  }\n\n  const isSecure =\n    parsedUrl.protocol === 'wss:' || parsedUrl.protocol === 'https:';\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const get = isSecure ? https.get : http.get;\n  let perMessageDeflate;\n\n  opts.createConnection = isSecure ? tlsConnect : netConnect;\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket',\n    ...opts.headers\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols) {\n    opts.headers['Sec-WebSocket-Protocol'] = protocols;\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isUnixSocket) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req = (websocket._req = get(opts));\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (websocket._req.aborted) return;\n\n    req = websocket._req = null;\n    websocket.readyState = WebSocket.CLOSING;\n    websocket.emit('error', err);\n    websocket.emitClose();\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      const addr = new URL(location, address);\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the `upgrade`\n    // event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    const protList = (protocols || '').split(/, */);\n    let protError;\n\n    if (!protocols && serverProt) {\n      protError = 'Server sent a subprotocol but none was requested';\n    } else if (protocols && !serverProt) {\n      protError = 'Server sent no subprotocol';\n    } else if (serverProt && !protList.includes(serverProt)) {\n      protError = 'Server sent an invalid subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket.protocol = serverProt;\n\n    if (perMessageDeflate) {\n      try {\n        const extensions = parse(res.headers['sec-websocket-extensions']);\n\n        if (extensions[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n          websocket._extensions[\n            PerMessageDeflate.extensionName\n          ] = perMessageDeflate;\n        }\n      } catch (err) {\n        abortHandshake(\n          websocket,\n          socket,\n          'Invalid Sec-WebSocket-Extensions header'\n        );\n        return;\n      }\n    }\n\n    websocket.setSocket(socket, head, opts.maxPayload);\n  });\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket)} stream The request to abort or the\n *     socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket.readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream.abort();\n    stream.once('abort', websocket.emitClose.bind(websocket));\n    websocket.emit('error', err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} data The data to send\n * @param {Function} cb Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    cb(err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {String} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._socket.removeListener('data', socketOnData);\n  websocket._socket.resume();\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  this[kWebSocket]._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  websocket._socket.removeListener('data', socketOnData);\n\n  websocket.readyState = WebSocket.CLOSING;\n  websocket._closeCode = err[kStatusCode];\n  websocket.emit('error', err);\n  websocket._socket.destroy();\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The message\n * @private\n */\nfunction receiverOnMessage(data) {\n  this[kWebSocket].emit('message', data);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  websocket.pong(data, !websocket._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * The listener of the `net.Socket` `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('end', socketOnEnd);\n\n  websocket.readyState = WebSocket.CLOSING;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk and emitted synchronously in a single\n  // `'data'` event.\n  //\n  websocket._socket.read();\n  websocket._receiver.end();\n\n  this.removeListener('data', socketOnData);\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket.readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the `net.Socket` `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket.readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n","module.exports = require(\"events\");","'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends stream.Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {String} binaryType The type for binary data\n   * @param {Object} extensions An object containing the negotiated extensions\n   * @param {Boolean} isServer Specifies whether to operate in client or server\n   *     mode\n   * @param {Number} maxPayload The maximum allowed message length\n   */\n  constructor(binaryType, extensions, isServer, maxPayload) {\n    super();\n\n    this._binaryType = binaryType || BINARY_TYPES[0];\n    this[kWebSocket] = undefined;\n    this._extensions = extensions || {};\n    this._isServer = !!isServer;\n    this._maxPayload = maxPayload | 0;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._state = GET_INFO;\n    this._loop = false;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = buf.slice(n);\n      return buf.slice(0, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = buf.slice(n);\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    let err;\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          err = this.getInfo();\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          err = this.getPayloadLength16();\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          err = this.getPayloadLength64();\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          err = this.getData(cb);\n          break;\n        default:\n          // `INFLATING`\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    cb(err);\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getInfo() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      this._loop = false;\n      return error(RangeError, 'RSV2 and RSV3 must be clear', true, 1002);\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      this._loop = false;\n      return error(RangeError, 'RSV1 must be clear', true, 1002);\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        this._loop = false;\n        return error(RangeError, 'RSV1 must be clear', true, 1002);\n      }\n\n      if (!this._fragmented) {\n        this._loop = false;\n        return error(RangeError, 'invalid opcode 0', true, 1002);\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        this._loop = false;\n        return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002);\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        this._loop = false;\n        return error(RangeError, 'FIN must be set', true, 1002);\n      }\n\n      if (compressed) {\n        this._loop = false;\n        return error(RangeError, 'RSV1 must be clear', true, 1002);\n      }\n\n      if (this._payloadLength > 0x7d) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002\n        );\n      }\n    } else {\n      this._loop = false;\n      return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002);\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        this._loop = false;\n        return error(RangeError, 'MASK must be set', true, 1002);\n      }\n    } else if (this._masked) {\n      this._loop = false;\n      return error(RangeError, 'MASK must be clear', true, 1002);\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength16() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength64() {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009\n      );\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    return this.haveLength();\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  haveLength() {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        this._loop = false;\n        return error(RangeError, 'Max payload size exceeded', false, 1009);\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n      if (this._masked) unmask(data, this._mask);\n    }\n\n    if (this._opcode > 0x07) return this.controlMessage(data);\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its lenght is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    return this.dataMessage();\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          return cb(\n            error(RangeError, 'Max payload size exceeded', false, 1009)\n          );\n        }\n\n        this._fragments.push(buf);\n      }\n\n      const er = this.dataMessage();\n      if (er) return cb(er);\n\n      this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */\n  dataMessage() {\n    if (this._fin) {\n      const messageLength = this._messageLength;\n      const fragments = this._fragments;\n\n      this._totalPayloadLength = 0;\n      this._messageLength = 0;\n      this._fragmented = 0;\n      this._fragments = [];\n\n      if (this._opcode === 2) {\n        let data;\n\n        if (this._binaryType === 'nodebuffer') {\n          data = concat(fragments, messageLength);\n        } else if (this._binaryType === 'arraybuffer') {\n          data = toArrayBuffer(concat(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n\n        this.emit('message', data);\n      } else {\n        const buf = concat(fragments, messageLength);\n\n        if (!isValidUTF8(buf)) {\n          this._loop = false;\n          return error(Error, 'invalid UTF-8 sequence', true, 1007);\n        }\n\n        this.emit('message', buf.toString());\n      }\n    }\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data) {\n    if (this._opcode === 0x08) {\n      this._loop = false;\n\n      if (data.length === 0) {\n        this.emit('conclude', 1005, '');\n        this.end();\n      } else if (data.length === 1) {\n        return error(RangeError, 'invalid payload length 1', true, 1002);\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          return error(RangeError, `invalid status code ${code}`, true, 1002);\n        }\n\n        const buf = data.slice(2);\n\n        if (!isValidUTF8(buf)) {\n          return error(Error, 'invalid UTF-8 sequence', true, 1007);\n        }\n\n        this.emit('conclude', code, buf.toString());\n        this.end();\n      }\n    } else if (this._opcode === 0x09) {\n      this.emit('ping', data);\n    } else {\n      this.emit('pong', data);\n    }\n\n    this._state = GET_INFO;\n  }\n}\n\nmodule.exports = Receiver;\n\n/**\n * Builds an error object.\n *\n * @param {(Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @return {(Error|RangeError)} The error\n * @private\n */\nfunction error(ErrorCtor, message, prefix, statusCode) {\n  const err = new ErrorCtor(\n    prefix ? `Invalid WebSocket frame: ${message}` : message\n  );\n\n  Error.captureStackTrace(err, error);\n  err[kStatusCode] = statusCode;\n  return err;\n}\n","module.exports = require(\"stream\");","'use strict';\n\ntry {\n  const isValidUTF8 = require('utf-8-validate');\n\n  exports.isValidUTF8 =\n    typeof isValidUTF8 === 'object'\n      ? isValidUTF8.Validation.isValidUTF8 // utf-8-validate@<3.0.0\n      : isValidUTF8;\n} catch (e) /* istanbul ignore next */ {\n  exports.isValidUTF8 = () => true;\n}\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nexports.isValidStatusCode = (code) => {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n};\n","'use strict';\n\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER } = require('./constants');\nconst { isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst mask = Buffer.alloc(4);\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {net.Socket} socket The connection socket\n   * @param {Object} extensions An object containing the negotiated extensions\n   */\n  constructor(socket, extensions) {\n    this._extensions = extensions || {};\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._deflating = false;\n    this._queue = [];\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {Buffer} data The data to frame\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} options.readOnly Specifies whether `data` can be modified\n   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit\n   * @return {Buffer[]} The framed data as a list of `Buffer` instances\n   * @public\n   */\n  static frame(data, options) {\n    const merge = options.mask && options.readOnly;\n    let offset = options.mask ? 6 : 2;\n    let payloadLength = data.length;\n\n    if (data.length >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (data.length > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? data.length + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(data.length, 2);\n    } else if (payloadLength === 127) {\n      target.writeUInt32BE(0, 2);\n      target.writeUInt32BE(data.length, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    randomFillSync(mask, 0, 4);\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, data.length);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, data.length);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {(Number|undefined)} code The status code component of the body\n   * @param {String} data The message component of the body\n   * @param {Boolean} mask Specifies whether or not to mask the message\n   * @param {Function} cb Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || data === '') {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n      buf.write(data, 2);\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doClose, buf, mask, cb]);\n    } else {\n      this.doClose(buf, mask, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a close message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @private\n   */\n  doClose(data, mask, cb) {\n    this.sendFrame(\n      Sender.frame(data, {\n        fin: true,\n        rsv1: false,\n        opcode: 0x08,\n        mask,\n        readOnly: false\n      }),\n      cb\n    );\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    const buf = toBuffer(data);\n\n    if (buf.length > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doPing, buf, mask, toBuffer.readOnly, cb]);\n    } else {\n      this.doPing(buf, mask, toBuffer.readOnly, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a ping message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Boolean} readOnly Specifies whether `data` can be modified\n   * @param {Function} cb Callback\n   * @private\n   */\n  doPing(data, mask, readOnly, cb) {\n    this.sendFrame(\n      Sender.frame(data, {\n        fin: true,\n        rsv1: false,\n        opcode: 0x09,\n        mask,\n        readOnly\n      }),\n      cb\n    );\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    const buf = toBuffer(data);\n\n    if (buf.length > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doPong, buf, mask, toBuffer.readOnly, cb]);\n    } else {\n      this.doPong(buf, mask, toBuffer.readOnly, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a pong message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Boolean} readOnly Specifies whether `data` can be modified\n   * @param {Function} cb Callback\n   * @private\n   */\n  doPong(data, mask, readOnly, cb) {\n    this.sendFrame(\n      Sender.frame(data, {\n        fin: true,\n        rsv1: false,\n        opcode: 0x0a,\n        mask,\n        readOnly\n      }),\n      cb\n    );\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} options.compress Specifies whether or not to compress `data`\n   * @param {Boolean} options.binary Specifies whether `data` is binary or text\n   * @param {Boolean} options.fin Specifies whether the fragment is the last one\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const buf = toBuffer(data);\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (rsv1 && perMessageDeflate) {\n        rsv1 = buf.length >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    if (perMessageDeflate) {\n      const opts = {\n        fin: options.fin,\n        rsv1,\n        opcode,\n        mask: options.mask,\n        readOnly: toBuffer.readOnly\n      };\n\n      if (this._deflating) {\n        this.enqueue([this.dispatch, buf, this._compress, opts, cb]);\n      } else {\n        this.dispatch(buf, this._compress, opts, cb);\n      }\n    } else {\n      this.sendFrame(\n        Sender.frame(buf, {\n          fin: options.fin,\n          rsv1: false,\n          opcode,\n          mask: options.mask,\n          readOnly: toBuffer.readOnly\n        }),\n        cb\n      );\n    }\n  }\n\n  /**\n   * Dispatches a data message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} compress Specifies whether or not to compress `data`\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} options.readOnly Specifies whether `data` can be modified\n   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit\n   * @param {Function} cb Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._deflating = true;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        if (typeof cb === 'function') cb(err);\n\n        for (let i = 0; i < this._queue.length; i++) {\n          const callback = this._queue[i][4];\n\n          if (typeof callback === 'function') callback(err);\n        }\n\n        return;\n      }\n\n      this._deflating = false;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (!this._deflating && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[1].length;\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[1].length;\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} cb Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n","'use strict';\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n\n  if (header === undefined || header === '') return offers;\n\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 /* ' ' */ || code === 0x09 /* '\\t' */) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n","\"use strict\";\r\nexports.__esModule = true;\r\nvar http = require(\"http\");\r\nvar websocket = require(\"ws\");\r\nvar server = http.createServer(function (req, res) {\r\n    res.end(\"I'm connected\");\r\n});\r\nvar socket = new websocket.Server({ server: server });\r\nsocket.on('connection', function connection(ws) {\r\n    ws.on('message', function incoming(message) {\r\n        console.log('received: %s', message);\r\n    });\r\n    ws.send('something');\r\n});\r\nserver.listen(8080);\r\n","'use strict';\n\nconst WebSocket = require('./lib/websocket');\n\nWebSocket.createWebSocketStream = require('./lib/stream');\nWebSocket.Server = require('./lib/websocket-server');\nWebSocket.Receiver = require('./lib/receiver');\nWebSocket.Sender = require('./lib/sender');\n\nmodule.exports = WebSocket;\n","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"tls\");","module.exports = require(\"url\");","module.exports = require(\"zlib\");","'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} concurrency The maximum number of jobs allowed to run\n   *     concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n","'use strict';\n\n/**\n * Class representing an event.\n *\n * @private\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} target A reference to the target to which the event was dispatched\n   */\n  constructor(type, target) {\n    this.target = target;\n    this.type = type;\n  }\n}\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n * @private\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The received data\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor(data, target) {\n    super('message', target);\n\n    this.data = data;\n  }\n}\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n * @private\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {Number} code The status code explaining why the connection is being closed\n   * @param {String} reason A human-readable string explaining why the connection is closing\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor(code, reason, target) {\n    super('close', target);\n\n    this.wasClean = target._closeFrameReceived && target._closeFrameSent;\n    this.reason = reason;\n    this.code = code;\n  }\n}\n\n/**\n * Class representing an open event.\n *\n * @extends Event\n * @private\n */\nclass OpenEvent extends Event {\n  /**\n   * Create a new `OpenEvent`.\n   *\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor(target) {\n    super('open', target);\n  }\n}\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n * @private\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {Object} error The error that generated this event\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor(error, target) {\n    super('error', target);\n\n    this.message = error.message;\n    this.error = error;\n  }\n}\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {Function} listener The listener to add\n   * @param {Object} options An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} options.once A `Boolean`` indicating that the listener\n   *     should be invoked at most once after being added. If `true`, the\n   *     listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, listener, options) {\n    if (typeof listener !== 'function') return;\n\n    function onMessage(data) {\n      listener.call(this, new MessageEvent(data, this));\n    }\n\n    function onClose(code, message) {\n      listener.call(this, new CloseEvent(code, message, this));\n    }\n\n    function onError(error) {\n      listener.call(this, new ErrorEvent(error, this));\n    }\n\n    function onOpen() {\n      listener.call(this, new OpenEvent(this));\n    }\n\n    const method = options && options.once ? 'once' : 'on';\n\n    if (type === 'message') {\n      onMessage._listener = listener;\n      this[method](type, onMessage);\n    } else if (type === 'close') {\n      onClose._listener = listener;\n      this[method](type, onClose);\n    } else if (type === 'error') {\n      onError._listener = listener;\n      this[method](type, onError);\n    } else if (type === 'open') {\n      onOpen._listener = listener;\n      this[method](type, onOpen);\n    } else {\n      this[method](type, listener);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {Function} listener The listener to remove\n   * @public\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners(type);\n\n    for (let i = 0; i < listeners.length; i++) {\n      if (listeners[i] === listener || listeners[i]._listener === listener) {\n        this.removeListener(type, listeners[i]);\n      }\n    }\n  }\n};\n\nmodule.exports = EventTarget;\n","'use strict';\n\nconst { Duplex } = require('stream');\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {stream.Duplex} The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} options The options for the `Duplex` constructor\n * @return {stream.Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let resumeOnReceiverDrain = true;\n\n  function receiverOnDrain() {\n    if (resumeOnReceiverDrain) ws._socket.resume();\n  }\n\n  if (ws.readyState === ws.CONNECTING) {\n    ws.once('open', function open() {\n      ws._receiver.removeAllListeners('drain');\n      ws._receiver.on('drain', receiverOnDrain);\n    });\n  } else {\n    ws._receiver.removeAllListeners('drain');\n    ws._receiver.on('drain', receiverOnDrain);\n  }\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg) {\n    if (!duplex.push(msg)) {\n      resumeOnReceiverDrain = false;\n      ws._socket.pause();\n    }\n  });\n\n  ws.once('error', function error(err) {\n    if (duplex.destroyed) return;\n\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function(err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    let called = false;\n\n    ws.once('error', function error(err) {\n      called = true;\n      callback(err);\n    });\n\n    ws.once('close', function close() {\n      if (!called) callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n    ws.terminate();\n  };\n\n  duplex._final = function(callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    // If the value of the `_socket` property is `null` it means that `ws` is a\n    // client websocket and the handshake failed. In fact, when this happens, a\n    // socket is never assigned to the websocket. Wait for the `'error'` event\n    // that will be emitted by the websocket.\n    if (ws._socket === null) return;\n\n    if (ws._socket._writableState.finished) {\n      callback();\n      if (duplex._readableState.endEmitted) duplex.destroy();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function() {\n    if (ws.readyState === ws.OPEN && !resumeOnReceiverDrain) {\n      resumeOnReceiverDrain = true;\n      if (!ws._receiver._writableState.needDrain) ws._socket.resume();\n    }\n  };\n\n  duplex._write = function(chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nmodule.exports = createWebSocketStream;\n","'use strict';\n\nconst EventEmitter = require('events');\nconst { createHash } = require('crypto');\nconst { createServer, STATUS_CODES } = require('http');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst WebSocket = require('./websocket');\nconst { format, parse } = require('./extension');\nconst { GUID, kWebSocket } = require('./constants');\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Number} options.backlog The maximum length of the queue of pending\n   *     connections\n   * @param {Boolean} options.clientTracking Specifies whether or not to track\n   *     clients\n   * @param {Function} options.handleProtocols A hook to handle protocols\n   * @param {String} options.host The hostname where to bind the server\n   * @param {Number} options.maxPayload The maximum allowed message size\n   * @param {Boolean} options.noServer Enable no server mode\n   * @param {String} options.path Accept only connections matching this path\n   * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable\n   *     permessage-deflate\n   * @param {Number} options.port The port where to bind the server\n   * @param {http.Server} options.server A pre-created HTTP/S server to use\n   * @param {Function} options.verifyClient A hook to reject connections\n   * @param {Function} callback A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      maxPayload: 100 * 1024 * 1024,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      ...options\n    };\n\n    if (options.port == null && !options.server && !options.noServer) {\n      throw new TypeError(\n        'One of the \"port\", \"server\", or \"noServer\" options must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = createServer((req, res) => {\n        const body = STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, (ws) => {\n            this.emit('connection', ws, req);\n          });\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) this.clients = new Set();\n    this.options = options;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Close the server.\n   *\n   * @param {Function} cb Callback\n   * @public\n   */\n  close(cb) {\n    if (cb) this.once('close', cb);\n\n    //\n    // Terminate all associated clients.\n    //\n    if (this.clients) {\n      for (const client of this.clients) client.terminate();\n    }\n\n    const server = this._server;\n\n    if (server) {\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // Close the http server if it was internally created.\n      //\n      if (this.options.port != null) {\n        server.close(() => this.emit('close'));\n        return;\n      }\n    }\n\n    process.nextTick(emitClose, this);\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {net.Socket} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key =\n      req.headers['sec-websocket-key'] !== undefined\n        ? req.headers['sec-websocket-key'].trim()\n        : false;\n    const version = +req.headers['sec-websocket-version'];\n    const extensions = {};\n\n    if (\n      req.method !== 'GET' ||\n      req.headers.upgrade.toLowerCase() !== 'websocket' ||\n      !key ||\n      !keyRegex.test(key) ||\n      (version !== 8 && version !== 13) ||\n      !this.shouldHandle(req)\n    ) {\n      return abortHandshake(socket, 400);\n    }\n\n    if (this.options.perMessageDeflate) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = parse(req.headers['sec-websocket-extensions']);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        return abortHandshake(socket, 400);\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.connection.authorized || req.connection.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(key, extensions, req, socket, head, cb);\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(key, extensions, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Object} extensions The accepted extensions\n   * @param {http.IncomingMessage} req The request object\n   * @param {net.Socket} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(key, extensions, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new WebSocket(null);\n    let protocol = req.headers['sec-websocket-protocol'];\n\n    if (protocol) {\n      protocol = protocol.trim().split(/ *, */);\n\n      //\n      // Optionally call external protocol selection handler.\n      //\n      if (this.options.handleProtocols) {\n        protocol = this.options.handleProtocols(protocol, req);\n      } else {\n        protocol = protocol[0];\n      }\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws.protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, this.options.maxPayload);\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => this.clients.delete(ws));\n    }\n\n    cb(ws);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server.emit('close');\n}\n\n/**\n * Handle premature socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {net.Socket} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  if (socket.writable) {\n    message = message || STATUS_CODES[code];\n    headers = {\n      Connection: 'close',\n      'Content-Type': 'text/html',\n      'Content-Length': Buffer.byteLength(message),\n      ...headers\n    };\n\n    socket.write(\n      `HTTP/1.1 ${code} ${STATUS_CODES[code]}\\r\\n` +\n        Object.keys(headers)\n          .map((h) => `${h}: ${headers[h]}`)\n          .join('\\r\\n') +\n        '\\r\\n\\r\\n' +\n        message\n    );\n  }\n\n  socket.removeListener('error', socketOnError);\n  socket.destroy();\n}\n"],"sourceRoot":""}